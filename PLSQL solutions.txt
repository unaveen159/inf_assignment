SQL> spool D:/solutions.txt append
SQL> set serveroutput on
SQL>declare designation varchar2(50);
  2  eno number(5);
  3  id boolean;
  4  begin
  5  designation:='Naveen';
  6  dbms_output.put_line('This is related to Employee with Job Title: ' || designation);
  7* end;
  8  /
This is related to Employee with Job Title: Naveen

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare designation varchar2(50);
  2  eno number(5);
  3  id boolean;
  4  begin
  5  designation:='Naveen';
  6  eno:=15;
  7  dbms_output.put_line('This is related to Employee with Job Title: ' || designation,eno);
  8* end;
SQL> /
dbms_output.put_line('This is related to Employee with Job Title: ' || designation,eno);
*
ERROR at line 7:
ORA-06550: line 7, column 1:
PLS-00306: wrong number or types of arguments in call to 'PUT_LINE'
ORA-06550: line 7, column 1:
PL/SQL: Statement ignored


SQL> ed
Wrote file afiedt.buf

  1  declare designation varchar2(50);
  2  eno number(5);
  3  id boolean;
  4  begin
  5  designation:='Naveen';
  6  eno:=15;
  7  dbms_output.put_line('This is related to Employee with Job Title: ' || designation || eno);
  8* end;
SQL> /
This is related to Employee with Job Title: Naveen15

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare designation varchar2(50);
  2  eno number(5);
  3  id boolean;
  4  begin
  5  designation:='Naveen';
  6  eno:=15;
  7  dbms_output.put_line('This is related to Employee with Job Title: '||designation||eno);
  8* end;
SQL> /
This is related to Employee with Job Title: Naveen15

PL/SQL procedure successfully completed.

SQL>SQL> DECLARE
  2  
  3  eno number(5) NOT NULL := 2; --assign value into eno variable
  4  
  5  ename varchar2(15) := 'Branson Devs';
  6  
  7  /* Constant value is fixed for edept value is "Web Deloper"
  8  is fixed all program not required declare all times. */
  9  edept CONSTANT varchar2(15) := 'Web Developer';
 10  BEGIN
 11  dbms_output.put_line('Declared Value:');
 12  dbms_output.put_line(' Employee Number: ' || eno || ' Employee Name: ' || ename);
 13  dbms_output.put_line('Constant Declared:');
 14  dbms_output.put_line(' Employee Department: ' || edept);
 15  END;
 16  /
Declared Value:                                                                 
Employee Number: 2 Employee Name: Branson Devs                                  
Constant Declared:                                                              
Employee Department: Web Developer                                              

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  DECLARE
  2  eno number(5) NOT NULL := 2; --assign value into eno variable
  3  ename varchar2(15) := 'Branson Devs';
  4  /* Constant value is fixed for edept value is "Web Deloper"
  5  is fixed all program not required declare all times. */
  6  edept CONSTANT varchar2(15) := 'Web Developer';
  7  BEGIN
  8  dbms_output.put_line('Declared Value:');
  9  dbms_output.put_line(' Employee Number: ' || eno || ' Employee Name: ' || ename);
 10  dbms_output.put_line('Constant Declared:');
 11  dbms_output.put_line(' Employee Department: ' || edept);
 12* END;
 13  /
Declared Value:                                                                 
Employee Number: 2 Employee Name: Branson Devs                                  
Constant Declared:                                                              
Employee Department: Web Developer                                              

PL/SQL procedure successfully completed.

SQL> DECLARE  -- DECLARE block, declare and initialize values
  2  designation VARCHAR2(30);
  3  eno number(5) := 5;
  4  id BOOLEAN;
  5      inter INTERVAL YEAR(2) TO MONTH;
  6  BEGIN  -- BEGIN block, also assign values
  7  designation := UPPER('Web Developer');
  8  id := TRUE;
  9  inter := INTERVAL '45' YEAR;
 10  DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title:' || designation, id);
 11  END;
 12  /
DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title:' || designation, id);
*
ERROR at line 10:
ORA-06550: line 10, column 1: 
PLS-00306: wrong number or types of arguments in call to 'PUT_LINE' 
ORA-06550: line 10, column 1: 
PL/SQL: Statement ignored 


SQL> ed
Wrote file afiedt.buf

  1  DECLARE  -- DECLARE block, declare and initialize values
  2  designation VARCHAR2(30);
  3  eno number(5) := 5;
  4  id BOOLEAN;
  5      inter INTERVAL YEAR(2) TO MONTH;
  6  BEGIN  -- BEGIN block, also assign values
  7  designation := UPPER('Web Developer');
  8  id := TRUE;
  9  inter := INTERVAL '45' YEAR;
 10  DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title:' ||designation||id);
 11* END;
SQL> /
DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title:' ||designation||id);
                     *
ERROR at line 10:
ORA-06550: line 10, column 22: 
PLS-00306: wrong number or types of arguments in call to '||' 
ORA-06550: line 10, column 1: 
PL/SQL: Statement ignored 


SQL> ed
Wrote file afiedt.buf

  1  DECLARE  -- DECLARE block, declare and initialize values
  2  designation VARCHAR2(30);
  3  eno number(5) := 5;
  4  id BOOLEAN;
  5      inter INTERVAL YEAR(2) TO MONTH;
  6  BEGIN  -- BEGIN block, also assign values
  7  designation := UPPER('Web Developer');
  8  id := TRUE;
  9  inter := INTERVAL '45' YEAR;
 10  DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title: '||designation||id);
 11* END;
SQL> /
DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title: '||designation||id);
                     *
ERROR at line 10:
ORA-06550: line 10, column 22: 
PLS-00306: wrong number or types of arguments in call to '||' 
ORA-06550: line 10, column 1: 
PL/SQL: Statement ignored 


SQL> DECLARE
  2     result CHAR(20) := 'second';
  3  BEGIN
  4     IF ( result = 'distinction' ) THEN
  5        DBMS_OUTPUT.PUT_LINE('First Class with Distinction');
  6     ELSIF ( result = 'first' ) THEN
  7        DBMS_OUTPUT.PUT_LINE('First Class');
  8     ELSIF ( result = 'second' ) THEN
  9        DBMS_OUTPUT.PUT_LINE('Second Class');
 10     ELSIF ( result = 'third' ) THEN
 11        DBMS_OUTPUT.PUT_LINE('Third Class');
 12     ELSE
 13        DBMS_OUTPUT.PUT_LINE('Fail');
 14     END IF;
 15  END;
 16  /
Second Class                                                                    

PL/SQL procedure successfully completed.

SQL> DECLARE
  2     no NUMBER := 5;
  3  BEGIN
  4  LOOP
  5  DBMS_OUTPUT.PUT_LINE ('Inside value:  no = ' || no);
  6      no := no -1;
  7      IF no = 0 THEN
  8        EXIT;
  9      END IF;
 10      END LOOP;
 11      DBMS_OUTPUT.PUT_LINE('Outside loop end');
 12  END;
 13  /
Inside value:  no = 5                                                           
Inside value:  no = 4                                                           
Inside value:  no = 3                                                           
Inside value:  no = 2                                                           
Inside value:  no = 1                                                           
Outside loop end                                                                

PL/SQL procedure successfully completed.

SQL> BEGIN
  2  FOR no IN REVERSE 1..5 LOOP
  3      DBMS_OUTPUT.PUT_LINE('Iteration : ' || no);
  4    END LOOP;
  5  END;
  6  /
Iteration : 5                                                                   
Iteration : 4                                                                   
Iteration : 3                                                                   
Iteration : 2                                                                   
Iteration : 1                                                                   

PL/SQL procedure successfully completed.

SQL> declare
  2     no number := 5;
  3  begin
  4  loop
  5  dbms_output.put_line ('inside value:  no = ' || no);
  6      no := no -1;
  7      if no = 0 then
  8        exit;
  9      end if;
 10      end loop;
 11      dbms_output.put_line('outside loop end');   -- after exit control transfer this statement
 12  end;
 13  /
inside value:  no = 5                                                           
inside value:  no = 4                                                           
inside value:  no = 3                                                           
inside value:  no = 2                                                           
inside value:  no = 1                                                           
outside loop end                                                                

PL/SQL procedure successfully completed.

SQL> SQL>BEGIN
SP2-0042: unknown command "SQL>BEGIN" - rest of line ignored.
SQL> FOR i IN 1..5 LOOP
SP2-0734: unknown command beginning "FOR i IN 1..." - rest of line ignored.
SQL> dbms_output.put_line(i);
SP2-0734: unknown command beginning "dbms_outpu..." - rest of line ignored.
SQL> IF i=4 THEN
SP2-0734: unknown command beginning "IF i=4 THE..." - rest of line ignored.
SP2-0044: For a list of known commands enter HELP
and to leave enter EXIT.
SQL> GOTO label1;
SP2-0734: unknown command beginning "GOTO label..." - rest of line ignored.
SQL> END IF;
SP2-0042: unknown command "END IF" - rest of line ignored.
SQL> END LOOP;
SP2-0042: unknown command "END LOOP" - rest of line ignored.
SQL> <<label1>>
  2  DBMS_OUTPUT.PUT_LINE('Row Filled');
  3  END;
  4  /
END;
*
ERROR at line 3:
ORA-06550: line 3, column 1: 
PLS-00103: Encountered the symbol "END"  


SQL> BEGIN
  2  FOR i IN 1..5 LOOP
  3  dbms_output.put_line(i);
  4  IF i=4 THEN
  5  GOTO label1;
  6  END IF;
  7  END LOOP;
  8  <<label1>>
  9  DBMS_OUTPUT.PUT_LINE('Row Filled');
 10  END;
 11  /
1                                                                               
2                                                                               
3                                                                               
4                                                                               
Row Filled                                                                      

PL/SQL procedure successfully completed.

SQL> declare emp_id employees.employee_id%TYPE;
  2  begin savepoint dup_found;
  3  update employees set employee_id=1 where lower(last_name)='ross';
  4  exception when dup_val_on_index then rollback to dup_found;
  5  end;
  6  /
declare emp_id employees.employee_id%TYPE;
*
ERROR at line 1:
ORA-04098: trigger 'HR.EMPLOYEE_DEPT_FK_TRG' is invalid and failed 
re-validation 
ORA-06512: at line 3 


SQL> ed
Wrote file afiedt.buf

  1  begin savepoint dup_found;
  2  update employees set employee_id=1 where lower(last_name)='king';
  3  exception when dup_val_on_index then rollback to dup_found;
  4* end;
SQL> /
begin savepoint dup_found;
*
ERROR at line 1:
ORA-04098: trigger 'HR.EMPLOYEE_DEPT_FK_TRG' is invalid and failed 
re-validation 
ORA-06512: at line 2 


SQL> exit
SQL> declare i number;
  2  begin for i in 1..10 loop
  3  dbms_output.put_line(i);
  4  end loop;
  5  end;
  6  /

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare i number;
  2  begin for i in 1..10 loop
  3  dbms_output.put_line(i);
  4  end loop;
  5* end;
SQL> set serveroutput on
SQL> declare i number;
  2  begin for i in 1..10 loop
  3  dbms_output.put_line(i);
  4  end loop;
  5  end;
  6  /
1                                                                               
2                                                                               
3                                                                               
4                                                                               
5                                                                               
6                                                                               
7                                                                               
8                                                                               
9                                                                               
10                                                                              

PL/SQL procedure successfully completed.

SQL> spool off

SQL> spool D:/solutions.txt append
SQL> set serveroutput on
SQL> declare emp_no number not null:=2;
  2  emp_name varchar2(15):='Naveen Undralla';
  3  dept_name constant varchar2(15):='Business Analyst';
  4  begin dbms_output.put_line(emp_no||emp_name||dept_name);
  5  end;
  6  /
declare emp_no number not null:=2;
*
ERROR at line 1:
ORA-06502: PL/SQL: numeric or value error: character string buffer too small
ORA-06512: at line 3


SQL> ed\

SQL> ed
Wrote file afiedt.buf

  1  declare emp_no number not null:=2;
  2  emp_name varchar2(15):='Naveen Undralla';
  3  dept_name constant varchar2(20):='Business Analyst';
  4  begin dbms_output.put_line(emp_no||emp_name||dept_name);
  5* end;
  6  /
2Naveen UndrallaBusiness Analyst

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare emp_no number not null:=21356;
  2  emp_name varchar2(15):='Naveen Undralla';
  3  dept_name constant varchar2(20):='Business Analyst';
  4  begin
  5  dbms_output.put_line('Employee Id  Employee Name  Designation');
  6  dbms_output.put_line(emp_no||' '||' '||emp_name||' '||dept_name);
  7* end;
  8  /
Employee Id  Employee Name  Designation
21356  Naveen Undralla Business Analyst

PL/SQL procedure successfully completed.

SQL> declare no number:=5;
  2  begin loop dbms_output.put_line('Inside value: no=' ||no);
  3  no:=no-1;
  4  if no=0 then
  5  exit;
  6  end if;
  7  end loop;
  8  DBMS_OUTPUT.PUT_LINE('Outside loop end');
  9  end;
 10  /
Inside value: no=5
Inside value: no=4
Inside value: no=3
Inside value: no=2
Inside value: no=1
Outside loop end

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare no number:=0;
  2  begin
  3  while n<0 loop
  4  dbms_output.put_line('Inside value: no=' ||no);
  5  no:=no+1;
  6  end loop;
  7  DBMS_OUTPUT.PUT_LINE('Loop ends');
  8* end;
SQL> /
while n<0 loop
      *
ERROR at line 3:
ORA-06550: line 3, column 7:
PLS-00201: identifier 'N' must be declared
ORA-06550: line 3, column 1:
PL/SQL: Statement ignored

SQL> ed
Wrote file afiedt.buf

  1  declare n number:=0;
  2  begin
  3  while n<0 loop
  4  dbms_output.put_line('Inside value:' ||n);
  5  n:=n+1;
  6  end loop;
  7  DBMS_OUTPUT.PUT_LINE('Loop ends');
  8* end;
SQL> /
Loop ends

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare n number:=0;
  2  begin
  3  while n>0 loop
  4  dbms_output.put_line('Inside value:' ||n);
  5  n:=n+1;
  6  end loop;
  7  DBMS_OUTPUT.PUT_LINE('Loop ends');
  8* end;
SQL> /
Loop ends

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare n number:=0;
  2  begin
  3  while n<10 loop
  4  dbms_output.put_line('Inside value:' ||n);
  5  n:=n+1;
  6  end loop;
  7  DBMS_OUTPUT.PUT_LINE('Loop ends');
  8* end;
SQL> /
Inside value:0
Inside value:1
Inside value:2
Inside value:3
Inside value:4
Inside value:5
Inside value:6
Inside value:7
Inside value:8
Inside value:9
Loop ends

PL/SQL procedure successfully completed.

SQL> declare n number;
  2  begin for n in 1..5 loop
  3  dbms_output.put_line('Iteration:'||n);
  4  end loop;
  5  end;
  6  /
Iteration:1
Iteration:2
Iteration:3
Iteration:4
Iteration:5

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  begin for n in 1..5 loop
  2  dbms_output.put_line('Iteration:'||n);
  3  end loop;
  4* end;
SQL> /
Iteration:1
Iteration:2
Iteration:3
Iteration:4
Iteration:5

PL/SQL procedure successfully completed.

SQL> declare i number;
  2  begin loop DBMS_OUTPUT.PUT_LINE('Iteration:'||i);
  3  i=i+1;
  4  exit when i>5;
  5  end loop;
  6  end;
  7  /
i=i+1;
 *
ERROR at line 3:
ORA-06550: line 3, column 2:
PLS-00103: Encountered the symbol "=" when expecting one of the following:
:= . ( @ % ;
The symbol ":= was inserted before "=" to continue.

SQL> declare
  2  i number:=0;
  3  begin loop
  4  dbms_output.put_line('Hello');
  5  i:=i+1;
  6  exit when i>5;
  7  end loop;
  8* end;
SQL> /
Hello
Hello
Hello
Hello
Hello
Hello

PL/SQL procedure successfully completed.


SQL> declare
  2     no number := 0;
  3  begin
  4  for no in 1 .. 5 loop
  5      if i = 4 then
  6         continue;
  7      end if;
  8      dbms_output.put_line('Iteration : ' || no);
  9    end loop;
 10  end;
 11  /
    if i = 4 then
       *
ERROR at line 5:
ORA-06550: line 5, column 8: 
PLS-00201: identifier 'I' must be declared 
ORA-06550: line 5, column 5: 
PL/SQL: Statement ignored 


SQL> ed
Wrote file afiedt.buf

  1  declare
  2     no number;
  3  begin
  4  for no in 1 .. 5 loop
  5      if i = 4 then
  6         continue;
  7      end if;
  8      dbms_output.put_line('Iteration : ' ||no);
  9    end loop;
 10* end;
SQL> /
    if i = 4 then
       *
ERROR at line 5:
ORA-06550: line 5, column 8: 
PLS-00201: identifier 'I' must be declared 
ORA-06550: line 5, column 5: 
PL/SQL: Statement ignored 


SQL> ed
Wrote file afiedt.buf

  1  declare
  2     no number;
  3  begin
  4  for no in 1 .. 5 loop
  5      if no = 4 then
  6         continue;
  7      end if;
  8      dbms_output.put_line('Iteration : ' ||no);
  9    end loop;
 10* end;
SQL> /
Iteration : 1                                                                   
Iteration : 2                                                                   
Iteration : 3                                                                   
Iteration : 5                                                                   

PL/SQL procedure successfully completed.

SQL> begin
  2  for i in 1..5 loop
  3  dbms_output.put_line(i);
  4  if i=4 then
  5  goto label1;
  6  end if;
  7  end loop;
  8  <<label1>>
  9  dbms_output.put_line('Row Filled');
 10  end;
 11  /
1                                                                               
2                                                                               
3                                                                               
4                                                                               
Row Filled                                                                      

PL/SQL procedure successfully completed.

SQL> declare a number:=&a;
  2  begin case a when 1 then dbms_output.put_line('Value is 1');
  3  when 2 then dbms_output.put_line('Value is 2');
  4  when 3 then dbms_output.put_line('Value is 3');
  5  else dbms_output.put_line('Value is not matching');
  6  end case;
  7  end;
  8  /
Enter value for a: 3
old   1: declare a number:=&a;
new   1: declare a number:=3;
Value is 3                                                                      

PL/SQL procedure successfully completed.

SQL> desc departments;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 DEPARTMENT_ID                             NOT NULL NUMBER(4)
 DEPARTMENT_NAME                           NOT NULL VARCHAR2(30)
 MANAGER_ID                                         NUMBER(6)
 LOCATION_ID                                        NUMBER(4)

SQL> begin update departments set department_name='Techincal Analyst'); where lower(lower_name)='King';
  2  commit;
  3  end;
  4  /
begin update departments set department_name='Techincal Analyst'); where lower(lower_name)='King';
                                                                *
ERROR at line 1:
ORA-06550: line 1, column 65: 
PL/SQL: ORA-00933: SQL command not properly ended 
ORA-06550: line 1, column 7: 
PL/SQL: SQL Statement ignored 
ORA-06550: line 1, column 68: 
PLS-00103: Encountered the symbol "WHERE" when expecting one of the following: 
( begin case declare end exception exit for goto if loop mod 
null pragma raise return select update while with 
<an identifier> <a double-quoted delim 


SQL> ed
Wrote file afiedt.buf

  1  begin update departments set department_name='Techincal Analyst') where lower(lower_name)='King';
  2  commit;
  3* end;
SQL> /
begin update departments set department_name='Techincal Analyst') where lower(lower_name)='King';
                                                                *
ERROR at line 1:
ORA-06550: line 1, column 65: 
PL/SQL: ORA-00933: SQL command not properly ended 
ORA-06550: line 1, column 7: 
PL/SQL: SQL Statement ignored 


SQL> ed
Wrote file afiedt.buf

  1  begin update departments set department_name='Techincal Analyst' where lower(lower_name)='King';
  2  commit;
  3* end;
SQL> /
begin update departments set department_name='Techincal Analyst' where lower(lower_name)='King';
                                                                             *
ERROR at line 1:
ORA-06550: line 1, column 78: 
PL/SQL: ORA-00904: "LOWER_NAME": invalid identifier 
ORA-06550: line 1, column 7: 
PL/SQL: SQL Statement ignored 


SQL> ed
Wrote file afiedt.buf

  1  begin update departments set department_name='Techincal Analyst' where lower(lower_name)='King';
  2  commit;
  3* end;
SQL> 
SQL> select department_id from departments;

DEPARTMENT_ID                                                                   
-------------                                                                   
           10                                                                   
           20                                                                   
           30                                                                   
           40                                                                   
           50                                                                   
           60                                                                   
           70                                                                   
           80                                                                   
           90                                                                   
          100                                                                   
          110                                                                   

DEPARTMENT_ID                                                                   
-------------                                                                   
          120                                                                   
          130                                                                   
          140                                                                   
          150                                                                   
          160                                                                   
          170                                                                   
          180                                                                   
          190                                                                   
          200                                                                   
          210                                                                   
          220                                                                   

DEPARTMENT_ID                                                                   
-------------                                                                   
          230                                                                   
          240                                                                   
          250                                                                   
          260                                                                   
          270                                                                   

27 rows selected.

SQL> ed
Wrote file afiedt.buf

  1* select department_id from departments
SQL> ed
Wrote file afiedt.buf

  1  begin update departments set department_name='Techincal Analyst' where department_id=40;
  2  commit;
  3*  end;
SQL> /

PL/SQL procedure successfully completed.

SQL> select department_name from departments where department_id=40;

DEPARTMENT_NAME                                                                 
------------------------------                                                  
Techincal Analyst                                                               

SQL> exit
SQL> begin savepoint dup_found;
  2  update employees set employee_id=1 where lower(last_name)='ross';
  3  end;
  4  /
begin savepoint dup_found;
*
ERROR at line 1:
ORA-04098: trigger 'HR.EMPLOYEE_DEPT_FK_TRG' is invalid and failed 
re-validation 
ORA-06512: at line 2 


SQL> 
SQL> select last_name from employees where lower(first_name)='forbs';

no rows selected

SQL> select last_name from employees;

LAST_NAME                                                                       
-------------------------                                                       
Abel                                                                            
Ande                                                                            
Atkinson                                                                        
Austin                                                                          
Baer                                                                            
Baida                                                                           
Banda                                                                           
Bates                                                                           
Bell                                                                            
Bernstein                                                                       
Bissot                                                                          

LAST_NAME                                                                       
-------------------------                                                       
Bloom                                                                           
Bull                                                                            
Cabrio                                                                          
Cambrault                                                                       
Cambrault                                                                       
Chen                                                                            
Chung                                                                           
Colmenares                                                                      
Davies                                                                          
De Haan                                                                         
Dellinger                                                                       

LAST_NAME                                                                       
-------------------------                                                       
Dilly                                                                           
Doran                                                                           
Ernst                                                                           
Errazuriz                                                                       
Everett                                                                         
Faviet                                                                          
Fay                                                                             
Feeney                                                                          
Fleaur                                                                          
Fox                                                                             
Fripp                                                                           

LAST_NAME                                                                       
-------------------------                                                       
Gates                                                                           
Gee                                                                             
Geoni                                                                           
Gietz                                                                           
Grant                                                                           
Grant                                                                           
Greenberg                                                                       
Greene                                                                          
Hall                                                                            
Hartstein                                                                       
Higgins                                                                         

LAST_NAME                                                                       
-------------------------                                                       
Himuro                                                                          
Hunold                                                                          
Hutton                                                                          
Johnson                                                                         
Jones                                                                           
Kaufling                                                                        
Khoo                                                                            
King                                                                            
King                                                                            
Kochhar                                                                         
Kumar                                                                           

LAST_NAME                                                                       
-------------------------                                                       
Ladwig                                                                          
Landry                                                                          
Lee                                                                             
Livingston                                                                      
Lorentz                                                                         
Mallin                                                                          
Markle                                                                          
Marlow                                                                          
Marvins                                                                         
Matos                                                                           
Mavris                                                                          

LAST_NAME                                                                       
-------------------------                                                       
McCain                                                                          
McEwen                                                                          
Mikkilineni                                                                     
Mourgos                                                                         
Nayer                                                                           
OConnell                                                                        
Olsen                                                                           
Olson                                                                           
Ozer                                                                            
Partners                                                                        
Pataballa                                                                       

LAST_NAME                                                                       
-------------------------                                                       
Patel                                                                           
Perkins                                                                         
Philtanker                                                                      
Popp                                                                            
Rajs                                                                            
Raphaely                                                                        
Rogers                                                                          
Russell                                                                         
Sarchand                                                                        
Sciarra                                                                         
Seo                                                                             

LAST_NAME                                                                       
-------------------------                                                       
Sewall                                                                          
Smith                                                                           
Smith                                                                           
Stiles                                                                          
Sullivan                                                                        
Sully                                                                           
Taylor                                                                          
Taylor                                                                          
Tobias                                                                          
Tucker                                                                          
Tuvault                                                                         

LAST_NAME                                                                       
-------------------------                                                       
Urman                                                                           
Vargas                                                                          
Vishney                                                                         
Vollman                                                                         
Walsh                                                                           
Weiss                                                                           
Whalen                                                                          
Zlotkey                                                                         

107 rows selected.

SQL> ed
Wrote file afiedt.buf

  1  begin savepoint dup_found;
  2    update employees set employee_id=1 where lower(last_name)='weiss';
  3*   end;
SQL> /
begin savepoint dup_found;
*
ERROR at line 1:
ORA-04098: trigger 'HR.EMPLOYEE_DEPT_FK_TRG' is invalid and failed 
re-validation 
ORA-06512: at line 2 


SQL> set serveroutput on
SQL> create function number_of_employees
  2  return number
  3  begin select(*) into total from employees;
  4  return total;
  5  end;
  6  /

Warning: Function created with compilation errors.

SQL> ed
Wrote file afiedt.buf

  1  create function number_of_employees
  2  return number is total
  3  begin select(*) into total from employees;
  4  return total;
  5* end;
SQL> /
create function number_of_employees
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> ed
Wrote file afiedt.buf

  1  create function no_of_employees
  2  return number is total
  3  begin select(*) into total from employees;
  4  return total;
  5* end;
SQL> /

Warning: Function created with compilation errors.

SQL> ed
Wrote file afiedt.buf

  1  create function num_of_employees
  2  return number is total number;
  3  begin select(*) into total from employees;
  4  return total;
  5* end;
SQL> /

Warning: Function created with compilation errors.

SQL> ed
Wrote file afiedt.buf

  1  create function numb_of_employees
  2  return number is total number;
  3  begin select count(*) into total from employees;
  4  return total;
  5* end;
SQL> /

Function created.

SQL> declare c number(2);
  2  begin c:=numb_of_employees();
  3  dbms_output.put_line('Total number of employees are:'||c);
  4  end;
  5  /
declare c number(2);
*
ERROR at line 1:
ORA-06502: PL/SQL: numeric or value error: number precision too large 
ORA-06512: at line 2 


SQL> ed
Wrote file afiedt.buf

  1  declare c number;
  2  begin c:=numb_of_employees();
  3  dbms_output.put_line('Total number of employees are:'||c);
  4* end;
SQL> /
Total number of employees are:107                                               

PL/SQL procedure successfully completed.

SQL> declare a number;
  2  b number;
  3  c number;
  4  function max(x in number,y in number)
  5  return number is z number;
  6  begin if x>y then z:=x;
  7  else
  8     z:=y;
  9  end if;
 10  return z;
 11  end;
 12  begin a:=&a;
 13  b:=&b;
 14  c:=max(a,b);
 15  dbms_output.put_line('Maximum is:'||c);
 16  end;
 17  /
Enter value for a: 4
old  12: begin a:=&a;
new  12: begin a:=4;
Enter value for b: 5
old  13: b:=&b;
new  13: b:=5;
c:=max(a,b);
        *
ERROR at line 14:
ORA-06550: line 14, column 9: 
PLS-00103: Encountered the symbol "," when expecting one of the following: 
. ( ) * @ % & - + / at mod remainder rem <an exponent (**)> 
|| multiset 

SQL> ed
Wrote file afiedt.buf

  1  create function findmax(x in number,y in number)
  2  return number is z number;
  3  begin if x>y then z:=x;
  4  else
  5  z:=y;
  6  end if;
  7  return z;
  8* end;
SQL> /

Function created.

SQL> declare a number;b number;c number;
  2  begin c:=findmax(a,b);
  3  DBMS_OUTPUT.PUT_LINE('Maximum is:'||c);
  4  end;
  5  /
Maximum is:                                                                     

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare a number;b number;c number;
  2  begin
  3  a:=&a;
  4  b:=&b; 
  5  c:=findmax(a,b);
  6  DBMS_OUTPUT.PUT_LINE('Maximum is:'||c);
  7* end;
SQL> /
Enter value for a: 2
old   3: a:=&a;
new   3: a:=2;
Enter value for b: 3
old   4: b:=&b; 
new   4: b:=3; 
Maximum is:3                                                                    

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  create function factorial(n in number)
  2  return number is z number;
  3  begin if n=0 then z:=1;
  4  else
  5  z:=z*factorial(z-1);
  6  end if;
  7  return z;
  8* end;
SQL> /
create function factorial(n in number)
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 

SQL> ed
Wrote file afiedt.buf

  1  create function factorial1(n in number)
  2  return number is z number;
  3  begin if n=0 then z:=1;
  4  else
  5  z:=n*factorial1(n-1);
  6  end if;
  7  return z;
  8* end;
SQL> /
create function factorial1(n in number)
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> ed
Wrote file afiedt.buf

  1  create function factorial2(n in number)
  2  return number is z number;
  3  begin if n=0 then z:=1;
  4  else
  5  z:=n*factorial2(n-1);
  6  end if;
  7  return z;
  8* end;
SQL> /

Function created.

SQL> ed
Wrote file afiedt.buf

  1  declare factorial number;
  2  a number;
  3  begin a:=&a;
  4  factorial:=factorial2(a);
  5  dbms_output.put_line('The factorial value is:'||factorial);
  6* end;
SQL> /
Enter value for a: 5
old   3: begin a:=&a;
new   3: begin a:=5;
The factorial value is:120                                                      

PL/SQL procedure successfully completed.

SQL> spool off
SQL> spool D:/solutions.txt append
SQL> ed
Wrote file afiedt.buf

  1  declare
  2  a number;
  3  procedure square(x in out number) is
  4  begin
  5  x := x * x;
  6  end;
  7  begin
  8  a:= 16;
  9  square(a);
 10  dbms_output.put_line(' Square of (16): ' || a);
 11* end;
SQL> /
Square of (16): 256                                                             

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  declare
  2  a number;
  3  b number;
  4  c number;
  5  procedure findMin(x in number, y in number, z out number) IS
  6  begin
  7  IF x < y THEN
  8  z:= x;
  9  else
 10  z:= y;
 11  end if;
 12  end;
 13  begin
 14  a:= 23;
 15  b:= 45;
 16  findMin(a, b, c);
 17  dbms_output.put_line(' Minimum of (23, 45) : ' || c);
 18* end;
SQL> /
Minimum of (23, 45) : 23                                                        

PL/SQL procedure successfully completed.

SQL> ed
Wrote file afiedt.buf

  1  begin update departments set department_name='Specialized Marketing' where department_id=30;
  2  if sql%found then dbms_output.put_line('Updated');
  3  end if;
  4  if sql%notfound then dbms_output.put_line('Not updated');
  5  end if;
  6  if sql%rowcount>0 then dbms_output.put_line(sql%rowcount||' Rows Updated');
  7  else
  8  dbms_output.put_line('No rows updated');
  9  end if;
 10* end;
SQL> /
Updated                                                                         
1 Rows Updated                                                                  

PL/SQL procedure successfully completed.
SQL> spool off
